{"version":3,"file":"static/js/moviespage.1d59e877.chunk.js","mappings":"8PACA,EAAuB,yBAAvB,EAAwD,0BAAxD,EAAwF,wBAAxF,EAAuH,yBAAvH,EAAwJ,0BAAxJ,EAAyL,yBAAzL,EAAyN,yB,SCgEzN,EA3DmB,WACjB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KAEMC,EAAc,IAAIC,gBAAgBV,EAASW,QAAQC,IAAI,SAmB7D,OATAC,EAAAA,EAAAA,YAAU,WACHJ,IACLK,EAAAA,GACgBL,GACbM,KAAKP,GACLQ,MAAMC,IAAAA,OAAAA,QAAwB,4IACjCX,EAAaG,MACZ,CAACA,KAGF,iCACE,kBAAMS,SAjBW,SAAAC,GACnBA,EAAEC,iBACGf,GACLH,GAAS,kBAAKF,GAAN,IAAgBW,OAAO,SAAD,OAAWN,OAcTgB,UAAWC,EAAzC,WACE,4BACE,kBACED,UAAWC,EACXC,KAAK,OACLC,KAAK,OACLC,MAAOpB,EACPqB,SA1BW,SAAAP,GAAC,OAAIb,EAAaa,EAAEQ,OAAOF,MAAMG,gBA2B5CC,YAAY,sHAGhB,mBAAQN,KAAK,SAASF,UAAWC,EAAjC,+CAKDf,IACC,eAAIc,UAAWC,EAAf,SACGf,EAAcuB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACjB,eAAaX,UAAWC,EAAxB,UACE,SAAC,KAAD,CAAMW,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMnC,GAAYqB,UAAWC,EAAzD,UACE,eAAID,UAAWC,EAAf,SAAyBU,OAFpBD,a,4LCnDfK,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,uGACkBC,EAAAA,EAAAA,IAAM,8BAAD,OAA+BF,IADtD,uBACGG,EADH,EACGA,KADH,kBAGEA,EAAKC,SAHP,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BhC,GAA5B,0FACkB6B,EAAAA,EAAAA,IAAM,wBAAD,OACFF,EADE,kBACe3B,IAFtC,uBACG8B,EADH,EACGA,KADH,kBAKEA,EAAKC,SALP,kEAQA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,0FACkBL,EAAAA,EAAAA,IAAM,SAAD,OAAUK,EAAV,oBAA6BP,IADpD,uBACGG,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,0FACkBL,EAAAA,EAAAA,IAAM,SAAD,OAAUK,EAAV,4BAAqCP,IAD5D,uBACGG,EADH,EACGA,KADH,kBAGEA,EAAKM,MAHP,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,0FACkBL,EAAAA,EAAAA,IAAM,SAAD,OAAUK,EAAV,4BAAqCP,IAD5D,uBACGG,EADH,EACGA,KADH,kBAGEA,EAAKC,SAHP,kEA5BPF,EAAAA,GAAAA,SAAAA,QAAyB","sources":["webpack://react-homework-template/./src/components/MoviesPage/MoviesPage.module.css?564c","components/MoviesPage/MoviesPage.jsx","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviesPage_form__Hzb4A\",\"input\":\"MoviesPage_input__h5lTQ\",\"btn\":\"MoviesPage_btn__lDVr4\",\"list\":\"MoviesPage_list__xgBYI\",\"title\":\"MoviesPage_title__OtbeF\",\"item\":\"MoviesPage_item__31wgY\",\"link\":\"MoviesPage_link__Kqtq6\",\"img\":\"MoviesPage_img__7ZjY4\"};","import Notiflix from 'notiflix';\nimport { useState, useEffect } from 'react';\nimport { useLocation, useNavigate, Link } from 'react-router-dom';\nimport * as moviesApi from '../../services/movies-api';\nimport s from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [filmQuery, setFilmQuery] = useState('');\n  const [searchedFilms, setSearchedFilms] = useState([]);\n\n  const searchQuery = new URLSearchParams(location.search).get('query');\n\n  const handleChange = e => setFilmQuery(e.target.value.toLowerCase());\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!filmQuery) return;\n    navigate({ ...location, search: `query=${filmQuery}` });\n  };\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    moviesApi\n      .searchMovies(searchQuery)\n      .then(setSearchedFilms)\n      .catch(Notiflix.Notify.warning('Такого фільму не знайдено'));\n    setFilmQuery(searchQuery);\n  }, [searchQuery]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label>\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={filmQuery}\n            onChange={handleChange}\n            placeholder=\"Введіть назву фільма\"\n          />\n        </label>\n        <button type=\"submit\" className={s.btn}>\n          Пошук\n        </button>\n      </form>\n\n      {searchedFilms && (\n        <ol className={s.list}>\n          {searchedFilms.map(({ id, title }) => (\n            <li key={id} className={s.item}>\n              <Link to={`${id}`} state={{ from: location }} className={s.link}>\n                <h5 className={s.title}>{title}</h5>\n              </Link>\n            </li>\n          ))}\n        </ol>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = '8a9652bb26671496507850b18d700d89';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  const { data } = await axios(`trending/movie/day?api_key=${API_KEY}`);\n\n  return data.results;\n}\n\nexport async function searchMovies(searchQuery) {\n  const { data } = await axios(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n\n  return data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const { data } = await axios(`movie/${movieId}?api_key=${API_KEY}`);\n\n  return data;\n}\n\nexport async function getMovieCredits(movieId) {\n  const { data } = await axios(`movie/${movieId}/credits?api_key=${API_KEY}`);\n\n  return data.cast;\n}\n\nexport async function getMovieReviews(movieId) {\n  const { data } = await axios(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n\n  return data.results;\n}\n"],"names":["location","useLocation","navigate","useNavigate","useState","filmQuery","setFilmQuery","searchedFilms","setSearchedFilms","searchQuery","URLSearchParams","search","get","useEffect","moviesApi","then","catch","Notiflix","onSubmit","e","preventDefault","className","s","type","name","value","onChange","target","toLowerCase","placeholder","map","id","title","to","state","from","API_KEY","getTrendingMovies","axios","data","results","searchMovies","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}